params {
    // Default parameters for the pipeline
    defaults = [
        techrep: "1",
        biorep: "1",

        // Since this is used in multiple steps, it will be used as the default value for each sample
        // unless an algorithm-specific setting is declared (i.e. parseParams with "--min-mapq 40")
        minMapq: 30,
        
        aligner: "bwa-mem2",

        // Options that Hich formats from sample attributes and should not be specified in bwaFlags:
        // -t (obtained from the Nextflow resource profile)
        // For BSBolt, -OT, -O, -DB, -F1, -F2
        bwaFlags: ["-S", "-P", "-5", "-M"],

        // Default for extracting the cell barcode for each read and putting it in the column cellID.
        // This is done with `hich reshape`. Defaults are only applied for a given sample if
        // cellBarcodeField is specified and there is no cellBarcodeRegexPattern or cellBarcodeParsePattern.
        // If cellBarcodeField is readID and --drop-readid is specified, then the readID column is dropped
        // AFTER parsing and reshaping, the last action taken by hich reshape.
        //
        // Note that globalDefaultReshapeToCellID should not be used in id-specific ConfigMap bundles.
        // Specify a value of reshapeParams instead for id-specific ConfigMap bundles.
        //
        // Note that parsing the cellBarcodeField to the cellID column happens first, before any other reshapeParams
        // options are applied. For more control over the order of hich reshape flags, specify id-specific reshapeParams
        // ConfigMap bundles in params, after the params.defaults ConfigMap bundle.
        //
        // Also, note that patterns (regex and parse) will be automatically wrapped in quotes
        // when processed during UpdateSamples.
        reshapeParams: [],
        globalDefaultReshapeToCellID: [
            [option: "--regex", pattern: "^(.*?):.*", group: 1]
        ],

        // Options that Hich formats from sample attributes and should not be specified in pairtoolsParse2Params:
        // --nproc-in, --nproc-out, --assembly, --chroms-path
        pairtoolsParse2Params: [
            "--drop-readid",
            "--drop-seq",
            "--drop-sam"
        ],

        // Options that Hich formats from sample attributes and should not be specified in pairtoolsDedupParams:
        // --nproc-in, --nproc-out
        pairtoolsDedupParams: [],

        // Options that Hich formats from sample attributes and should not be specified in pairtoolsSelectParams:
        // --nproc-in, --nproc-out
        pairtoolsSelectParams: [],

        pairtoolsSelectFilters: [
            keepPairTypes: ["UU", "RU", "UR"],
            keepTrans: true,
            keepCis: true,
            minDistFR: 1000,
            minDistRF: 1000,
            minDistFF: 1000,
            minDistRR: 1000,
            discardSingleFrag: true
        ],

        juicerToolsPreParams: [],

        coolerCloadParams: ["--chrom1 2", "--pos1 3", "--chrom2 4", "--pos2 5"],

        coolerZoomifyParams: ["--balance", "--balance-args '--max-iters 2000 --trans-only'"]
    ]

    // Aggregation plans define how samples are split, merged, downsampled and deduplicated
    aggregate = [
        // Each key under aggregate is the name of an aggregation profile
        aggregationPlan: [
            dedup: true,
            dedupMaxMismatch: 3,
            dedupMethod: 'max',
            mergeTechrepToBiorep: true,
            mergeBiorepToCondition: true
        ]
    ]

    sampleSelectionStrategies = [
        all: [:],
        conditions: [aggregateLevel:"condition"],
        bioreps: [aggregateLevel:"biorep"]
    ]


    matrices = [
        default: [
            sampleSelectionStrategy: "all",
            makeMcoolFileFormat: true,
            makeHicFileFormat: false,
            resolutions: [10000, 20000, 50000, 100000, 200000, 500000, 1000000]
        ],

    ]

    hicrep = [
        hicrep_default: [
            sampleSelectionStrategy: "bioreps",
            resolutions: [100000],
            chromFilter: [],
            h: [1],
            dBPMax: [5000000],
            bDownSample: [true]
        ]
    ]

    loops = []

    differentialLoops = [
        difflops_default: [
            sampleSelectionStrategy: "bioreps",
            mustacheParams: ["-r 10000"]
        ]
    ]

    insulation = []

    compartments = [
        hich_compartments_default: [
            sampleSelectionStrategy: "conditions",
            hichCompartmentsParams: ["--view $projectDir/tests/assets/chr1.view"],
            resolution: 1000000
        ]
    ]

    tads = []
}
