
nextflow_function {

    name "Test Functions"
    script "contents/subwf/reads/SelectPairs/functions.nf"

	
    test("SelectPairs_buildCmd") {
        tag "3to10s"
        function "buildCmd"

        when {
            function {
                """
                filters = [
                    keepPairTypes: ["UU", "UR", "RU"],
                    onlyCis: true,
                    discardSingleFrag: true,
                    minDistFR: 1,
                    minDistRF: 2,
                    minDistFF: 3,
                    minDistRR: 4,
                    chroms: ["chr1", "chr2"]
                ]
                input[0] = "1"
                input[1] = "1.pairs.gz"
                input[2] = "frags.gz"
                input[3] = ["--output-rest": "_rest.pairs.gz", "filters": filters]
                input[4] = 8
                """
            }
        }

        then {
            assert function.success
            def cmd = function.result[0]
            def parts = CommandChecker.getSequentialParts(cmd)
            def create_chroms_bed_cmd = parts[0]
            def select_cmd = parts[1]
            CommandChecker.checkCmd(
                create_chroms_bed_cmd,
                "echo",
                [
                    /'chr1\nchr2'/, 
                    ">", 
                    "'__chroms__.bed'"
                ]
            )
            CommandChecker.checkCmd(
                select_cmd,
                "pairtools select",
                [
                    [
                        "--chrom-subset": "'__chroms__.bed'",
                        "--nproc-in": "'8'",
                        "--nproc-out": "'8'",
                        "-o": "'1_select.pairs.gz'",
                        "--output-rest": "'1_rest.pairs.gz'"
                    ],
                    "'1.pairs.gz'"
                ]
            )
            def select_str = (
                "\"(pair_type in ['UU', 'UR', 'RU']) and (chrom1 == chrom2) and (" +
                    "(strand1 + strand2 == '+-' and abs(pos2 - pos1) >= 1) " +
                    "or (strand1 + strand2 == '-+' and abs(pos2 - pos1) >= 2) " +
                    "or (strand1 + strand2 == '++' and abs(pos2 - pos1) >= 3) " +
                    "or (strand1 + strand2 == '--' and abs(pos2 - pos1) >= 4)" +
                ") and (rfrag1 != rfrag2)\""
            )
            assert select_cmd.contains(select_str)
            assert cmd.contains("&&")
        }
    }
}