
nextflow_function {

    name "reshape"
    script "contents/subwf/util/reshape.nf"
    tag "priority1"

    test("columnsNullOK") {

        function "columns"

        when {
            function {
                """
                input[0] = [ [a:1, b:2, c:3], [a:4] ]
                input[1] = [defaults: [b: 2, c: null], nullOK: ["c"]]
                """
            }
        }
        then {
            with (function) {
                assert success
                assert result == [a: [1, 4], b: [2, 2], c: [3, null]]
            }
        }
    }

    test("columnsNullNotOK") {

        function "columns"

        when {
            function {
                """
                input[0] = [ [a:1, b: 2], [a:3] ]
                input[1] = []
                """
            }
        }
        then {
            with (function) {
                assert failed
            }
        }
    }

    test("columnsDropNull") {

        function "columns"

        when {
            function {
                """
                input[0] = [ [a:1, b:2], [a:4] ]
                input[1] = [dropAllNull: true]
                """
            }
        }
        then {
            with (function) {
                assert success
                assert result == [a: [1, 4], b: [2]]
            }
        }
    }

	test("wrongOptionName") {

        function "columns"
        
        when {
            function {
                """
                input[0] = []
                input[1] = [wrongOptionName:1]
                """
            }
        }
        then {
            with (function) {
                assert failed
            }
        }
    }

	test("wrongOptionType") {

        function "columns"
        
        when {
            function {
                """
                input[0] = []
                input[1] = [dropNull:true]
                """
            }
        }
        then {
            with (function) {
                assert failed
            }
        }
    }

	test("columnsWrongType") {

        function "columns"

        when {
            function {
                """
                input[0] = [1, 2, 3]
                input[1] = [:]
                """
            }
        }
        then {
            with (function) {
                assert failed
            }
        }
    }

    test("coalesceRequireSingleFalse") {
        function "coalesce"

        when {
            function {
                """
                input[0] = [a: [1, 1], b: [1, 2], c: []]
                input[1] = true
                """
            }
        }

        then {
            with (function) {
                assert success
                assert result == [a: 1]
            }
        }
    }

    test("coalesceRequireSingleTrue") {
        function "coalesce"

        when {
            function {
                """
                input[0] = [a: [1, 1], b: [1, 2], c: []]
                input[1] = false
                """
            }
        }

        then {
            with (function) {
                assert success
                assert result == [a: 1, b: [1, 2], c: []]
            }
        }
    }
}