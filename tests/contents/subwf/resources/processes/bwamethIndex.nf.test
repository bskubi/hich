nextflow_process {

    name "Test Process BwamethIndex"
    script "contents/subwf/resources/processes/bwamethIndex.nf"
    process "BwamethIndex"

    test("stubBwamethIndex") {
        options """-stub-run"""
        tag "priority1"

        when {
            params {
            }
            process {
                """
                input[0] = tuple("hg38", file("$projectDir/resources/hich/genomeReference/GRCh38_no_alt_analysis_set_GCA_000001405.15.fasta.gz"), "hg38")
                """
            }
        }

        then {
            assert process.success
            with (process) {
                def out = out[0][0]
                assert out[0] == "hg38"
                assert out[1].endsWith("/bwameth/index")
                assert out[2] == "hg38"
                assert out[3].endsWith("/bwameth/index/hg38.c2t")
                assert out[4].endsWith("/bwameth/index/hg38.c2t.amb")
                assert out[5].endsWith("/bwameth/index/hg38.c2t.ann")
                assert out[6].endsWith("/bwameth/index/hg38.c2t.bwt")
                assert out[7].endsWith("/bwameth/index/hg38.c2t.pac")
                assert out[8].endsWith("/bwameth/index/hg38.c2t.sa")
            }
        }
    }

    test("fullBwamethIndex") {
        tag "priority4"

        when {
            params {
            }
            process {
                """
                input[0] = tuple("hg38_chr19", file("$projectDir/tests/assets/chr19.fa.gz"), "hg38_chr19")
                """
            }
        }

        then {
            assert process.success
            with (process) {
                def out = out[0][0]
                assert out[0] == "hg38_chr19"
                assert out[1].endsWith("/bwameth/index")
                assert out[2] == "hg38_chr19"
                assert out[3].endsWith("/bwameth/index/hg38_chr19.c2t")
                assert out[4].endsWith("/bwameth/index/hg38_chr19.c2t.amb")
                assert out[5].endsWith("/bwameth/index/hg38_chr19.c2t.ann")
                assert out[6].endsWith("/bwameth/index/hg38_chr19.c2t.bwt")
                assert out[7].endsWith("/bwameth/index/hg38_chr19.c2t.pac")
                assert out[8].endsWith("/bwameth/index/hg38_chr19.c2t.sa")
            }
        }
    }

}
