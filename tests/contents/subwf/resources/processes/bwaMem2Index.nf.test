nextflow_process {

    name "Test Process BwaMem2Index"
    script "contents/subwf/resources/processes/bwaMem2Index.nf"
    process "BwaMem2Index"

    test("stubBwaMem2Index") {
        options "-stub-run"
        tag "priority1"
        tag "stubAlignerIndex"

        when {
            params {
            }
            process {
                """
                input[0] = tuple("hg38_chr19", file("$projectDir/tests/assets/hg38_chr19.fa.gz"), "hg38_chr19")
                """
            }
        }

        then {
            assert process.success
            with (process) {
                def out = out[0][0]
                assert out[0] == "hg38_chr19"
                assert out[1].endsWith("/bwa-mem2/index")
                assert out[2] == "hg38_chr19"
                assert out[3].endsWith("/bwa-mem2/index/hg38_chr19.0123")
                assert out[4].endsWith("/bwa-mem2/index/hg38_chr19.amb")
                assert out[5].endsWith("/bwa-mem2/index/hg38_chr19.ann")
                assert out[6].endsWith("/bwa-mem2/index/hg38_chr19.bwt.2bit.64")
                assert out[7].endsWith("/bwa-mem2/index/hg38_chr19.pac")
            }
        }
    }

    test("fullBwaMem2Index") {
        tag "priority3"
        tag "fullAlignerIndex"

        when {
            params {
            }
            process {
                """
                input[0] = tuple("hg38_chr19", file("$projectDir/tests/assets/hg38_chr19.fa.gz"), "hg38_chr19")
                """
            }
        }

        then {
            assert process.success
            with (process) {
                def out = out[0][0]
                assert out[0] == "hg38_chr19"
                assert out[1].endsWith("/bwa-mem2/index")
                assert out[2] == "hg38_chr19"
                assert out[3].endsWith("/bwa-mem2/index/hg38_chr19.0123")
                assert out[4].endsWith("/bwa-mem2/index/hg38_chr19.amb")
                assert out[5].endsWith("/bwa-mem2/index/hg38_chr19.ann")
                assert out[6].endsWith("/bwa-mem2/index/hg38_chr19.bwt.2bit.64")
                assert out[7].endsWith("/bwa-mem2/index/hg38_chr19.pac")
            }
        }
    }
}
