conda.enabled = true
docker.enabled = true

params {
    general {
        samples = "samples.csv"
        //last_step = "Select"

        publish {
            bam = "results/bam"
            parse = "results/pairs/parse"
            dedup = "results/pairs/dedup"
            mcool = "results/matrix/mcool"
            hic = "results/matrix/hic"
            pair_stats = "results/pair_stats"
            qc = "results/qc"
        }

        qc_after = ["Parse",
                    "IngestPairs",
                    "OptionalFragtag",
                    "TechrepsToBioreps",
                    "Deduplicate",
                    "BiorepsToConditions",
                    "Select"]
    } 

    defaults {
        min_mapq = 30
        
        deduplicate = true

        is_techrep = true
        is_biorep = false
        is_condition = false

        pairs_format {
            chrom1 = 2
            pos1 = 3
            chrom2 = 4
            pos2 = 5
        }

        parse_params = [
           "--flip",
           "--min-mapq 30",
           "--drop-readid",
           "--drop-seq",
           "--drop-sam"
        ]

        dedup_params = ["--output-stats"]

        select_params = []
            
        select_condition {
            keep_pair_types = ["UU", "RU", "UR"]
            keep_trans = true
            keep_cis = true
            min_dist_fr = 1000
            min_dist_rf = 1000
            min_dist_ff = 0
            min_dist_rr = 0

            chroms = ["chr1", "chr2", "chr3", "chr4", "chr5", "chr6",
                        "chr7", "chr8", "chr9", "chr10", "chr11", "chr12",
                        "chr13", "chr14", "chr15", "chr16", "chr17", "chr18",
                        "chr19", "chr20", "chr21", "chr22", "chrX"]
            
            discard_same_frag = false
        }

        make_hic = []

        make_cool = []

        make_mcool = [
            "--balance",
            "--balance-args '--max-iters 2000 --trans-only'",
            "--nproc 10"
        ]

        matrix {
            make_mcool_file_format = true
            make_hic_file_format = true
            resolutions = [100000, 1000000]
        }

        compartments {
            resolution = 100000
            cooltools_eigs_cis_params = [
                "--bigwig"
            ]
        }

        insulation {
            resolution = 100000
            cooltools_insulation_params = [
                "--bigwig"
            ]
        }

        loops {
            call_on = ["is_biorep"]
            use_format = ["mcool", "hic"]

            mustache_params = [
            "--resolution 1000000",
            "--chromosome chr22",
            "--pThreshold .1",
            "--sparsityThreshold .88"
            ]

        }
        
    }

    ko {
        ids = ["KO_1_1", "KO_2_1", "KO_3_1", "KO_1", "KO_2", "KO_3", "KO"]

        downsample = "equal"
    }

    ko {
        ids = ["KO_1_1", "KO_2_1", "KO_3_1", "KO_1", "KO_2", "KO_3"]

        compartments = null
        insulation = null
    }
}
