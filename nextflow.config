conda.enabled = true
docker.enabled = true

params {
    general {
        samples = "samples.csv"

        publish {
            bam = "results/bam"
            parse = null
            mcool = "results/matrix/mcool"
            hic = "results/matrix/hic"
        }
    }

    defaults {


        min_mapq = 30
        
        deduplicate = true

        pairs_format {
            chrom1 = 2
            pos1 = 3
            chrom2 = 4
            pos2 = 5
        }

        select {
            keep_pair_types = ["UU", "RU", "UR"]
            keep_trans = true
            keep_cis = true
            // min_dist_fr = 1000
            // min_dist_rf = 1000
            // min_dist_ff = 0
            // min_dist_rr = 0

            // chroms = ["chr1", "chr2", "chr3", "chr4", "chr5", "chr6",
            //           "chr7", "chr8", "chr9", "chr10", "chr11", "chr12",
            //           "chr13", "chr14", "chr15", "chr16", "chr17", "chr18",
            //           "chr19", "chr20", "chr21", "chr22", "chrX"]
            
            discard_same_frag = false
        }

        matrix {
            make_matrix_binsizes = [100000, 1000000]
            make_mcool_file_format = true
            make_hic_file_format = true

            balance = ["--trans-only",
                       "--max-iters 2000"]

            chroms = ["chr1", "chr2", "chr3", "chr4", "chr5", "chr6",
                      "chr7", "chr8", "chr9", "chr10", "chr11", "chr12",
                      "chr13", "chr14", "chr15", "chr16", "chr17", "chr18",
                      "chr19", "chr20", "chr21", "chr22", "chrX"]
        }
    }
    
    biorep_params {
        ids = ["KO_1", "Mock_1"]
        deduplicate = false
    }
}