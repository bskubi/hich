apptainer {
    enabled = true
}

conda.enabled = true
conda.useMamba = true


params {
    sampleFileSep = "\t"
    humid = null

    general {

        hichContainer = "bskubi/hich:latest"
        chromsizesContainer = 'quay.io/biocontainers/ucsc-fasize:332--0'
        mustacheContainer = "bskubi/mustache:latest"
        juicerContainer = "bskubi/juicer_tools:1.22.01"
        hictkContainer = "ghcr.io/paulsengroup/hictk:1.0.0"

        publish {
            // Nextflow publishDir param for all processes
            // https://www.nextflow.io/docs/latest/process.html#publishdir
            mode = "link"

            // Where to publish results of Hich processes
            genomeReference = "resources/hich/genomeReference"
            chromsizes = "resources/hich/chromsizes"
            bwaMem2Index = "resources/hich/bwa-mem2"
            bwaIndex = "resources/hich/bwa"
            bsboltIndex = "resources/hich/bsbolt"
            fragmentIndex = "resources/hich/fragmentIndex"

            align = "results/align"
            parse = "results/pairs/parse"
            dedup = "results/pairs/dedup"
            mcool = "results/matrix/mcool"
            hic = "results/matrix/hic"
            pairStats = "results/pairStats"
            qc = "results/qc"
        }
        
        // After these steps, generate read-level pairs 
        // stats files and generate a combined MultiQC report
        // for all samples at each processing stage
        qcAfter = ["parse",
                    "ingestPairs",
                    "tagRestrictionFragments",
                    "select",
                    "aggregate"]
        
        // Number of reads to downsample to by default for a humid run
        // can also be specified simply via --humid 100000 or similar
        humidDefault = 100000
    }
}

profiles {
    onerep_bulk {
        includeConfig "$projectDir/params/onerep_bulk.yml"
    }

    tiered_bulk {
        includeConfig "$projectDir/params/tiered_bulk.yml"
    }

    singlecell {
        includeConfig "$projectDir/params/singlecell.yml"
    }

    localPC {
        executor {
            name = 'local'
            cpus = 10
            memory = 20.GB
        }
        
        process {
	        executor = 'local'

            withLabel: whenLocal_allConsuming {
                maxForks = 1
                cpus = 10
                memory = 20.GB
            }

            withLabel: smallResource {
                cpus = 8
                memory = 8.GB
            }

            withLabel: pairs {
                cpus = 8
                memory = 8.GB
            }

            withLabel: createMatrix {
                cpus = 10
                memory = 16.GB
            }

            withLabel: convertMcoolToHic {
                cpus = 10
                memory = 20.GB
            }

            withLabel: convertHicToMcool {
                cpus = 2
                memory = 20.GB
            }

            withLabel: features {
                cpus = 5
                memory = 10.GB
            }

            withLabel: stats {
                cpus = 1
                memory = 2.GB
            }
        }

    }


    localHPC {
        executor {
            name = 'local'
            cpus = 100
            memory = 200.GB
        }

        process {
	        executor = 'local'

            withLabel: whenLocal_allConsuming {
                maxForks = 1
                cpus = 100
                memory = 200.GB
            }

            withLabel: smallResource {
                cpus = 8
                memory = 8.GB
            }

            withLabel: pairs {
                cpus = 8
                memory = 8.GB
            }

            withLabel: createMatrix {
                cpus = 24
                memory = 16.GB
            }

            withLabel: convertMcoolToHic {
                cpus = 20
                memory = 20.GB
            }

            withLabel: convertHicToMcool {
                cpus = 2
                memory = 20.GB
            }

            withLabel: features {
                cpus = 5
                memory = 10.GB
            }

            withLabel: stats {
                cpus = 1
                memory = 2.GB
            }
        }

    }
}
