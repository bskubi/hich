apptainer.enabled = true


params {
    sampleFileSep = "\t"

    general {

        alignmentContainer = "bskubi/hich_alignment:latest"
        hichContainer = "bskubi/hich_tools:latest"
        mustacheContainer = "bskubi/hich_mustache:latest"
        hicexplorerContainer = "bskubi/hich_hicexplorer:latest"
        juicerContainer = "bskubi/hich_juicer:latest"
        hictkContainer = "bskubi/hich_hictk:latest"
        coolerContainer = "bskubi/hich_cooler:latest"
        multiqcContainer = "bskubi/hich_multiqc:latest"
        chromsizesContainer = "quay.io/biocontainers/ucsc-fasize:332--0"

        publish {
            // Nextflow publishDir param for all processes
            // https://www.nextflow.io/docs/latest/process.html#publishdir
            mode = "link"

            // Where to publish results of Hich processes
            genomeReference = "resources/hich/genomeReference"
            chromsizes = "resources/hich/chromsizes"
            alignerIndex = "resources/hich/index"
            bwaMem2Index = "resources/hich/bwa-mem2"
            bwaIndex = "resources/hich/bwa"
            bsboltIndex = "resources/hich/bsbolt"
            fragmentIndex = "resources/hich/fragmentIndex"

            align = "results/align"
            parse = "results/pairs/parse"
            dedup = "results/pairs/dedup"
            mcool = "results/matrix/mcool"
            hic = "results/matrix/hic"
            pairStats = "results/pairStats"
            qc = "results/qc"
        }
        
        // After these steps, generate read-level pairs 
        // stats files and generate a combined MultiQC report
        // for all samples at each processing stage
        qcAfter = ["parse",
                    "ingestPairs",
                    "tagRestrictionFragments",
                    "select",
                    "dedup",
                    "aggregate"]
    }
}

profiles {
    onerep_bulk {
        includeConfig "$projectDir/params/onerep_bulk.config"
    }

    localPC {
        executor {
            name = 'local'
            cpus = 10
            memory = 20.GB
        }
        
        process {
	        executor = 'local'

            withLabel: smallResource {
                cpus = 8
                memory = 8.GB
            }

            withLabel: pairs {
                cpus = 8
                memory = 8.GB
            }

            withLabel: createMatrix {
                cpus = 10
                memory = 16.GB
            }

            withLabel: convertMcoolToHic {
                cpus = 10
                memory = 20.GB
            }

            withLabel: convertHicToMcool {
                cpus = 2
                memory = 20.GB
            }

            withLabel: features {
                cpus = 5
                memory = 10.GB
            }

            withLabel: stats {
                cpus = 1
                memory = 2.GB
            }

            withLabel: fullNode {
                cpus = 10
                memory = 16.GB
            }

            withLabel: fullNodeLongTime {
                cpus = 10
                memory = 16.GB
            }
        }

    }

    ohsu_arc {
        executor {
            name = 'slurm'
            cpus = 10
            memory = 12.GB
            queue = 'batch'
            time = '7d'
            clusterOptions = '--qos long_jobs --partition batch'
        }

        process {
	        executor = 'slurm'
            clusterOptions = '--qos long_jobs --partition batch'
            scratch = '/mnt/scratch'

            withLabel: smallResource {
                cpus = 8
                memory = 8.GB
                time = '12h'
                clusterOptions = '--qos long_jobs --partition batch --gres disk:1024'
            }

            withLabel: pairs {
                cpus = 20
                memory = 64.GB
                time = '12h'
                clusterOptions = '--qos long_jobs --partition batch --gres disk:1024'
            }

            withLabel: createMatrix {
                cpus = 24
                memory = 64.GB
                time = '12h'
                clusterOptions = '--qos long_jobs --partition batch --gres disk:1024'
            }

            withLabel: convertMcoolToHic {
                cpus = 20
                memory = 20.GB
                time = '12h'
                clusterOptions = '--qos long_jobs --partition batch --gres disk:1024'
            }

            withLabel: convertHicToMcool {
                cpus = 2
                memory = 20.GB
                time = '12h'
                clusterOptions = '--qos long_jobs --partition batch --gres disk:1024'
            }

            withLabel: features {
                cpus = 10
                memory = 64.GB
                time = '12h'
                clusterOptions = '--qos long_jobs --partition batch --gres disk:10'
            }

            withLabel: stats {
                cpus = 1
                memory = 2.GB
                time = '12h'
                clusterOptions = '--qos long_jobs --partition batch --gres disk:10'
            }

            withLabel: fullNode {
                cpus = 40
                memory = 128.GB
                time = '12h'
                clusterOptions = '--qos long_jobs --partition batch --gres disk:1024'
            }

            withLabel: fullNodeLongTime {
                cpus = 40
                memory = 128.GB
                time = '3d'
                clusterOptions = '--qos long_jobs --partition batch --gres disk:1024'
            }
        }
    }
}
