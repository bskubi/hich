apptainer.enabled = true

params {
    //lastStep = "align"

    general {
        sampleFile {
            filename = "samples.tsv"
            sep = "\t"
        }

        publish {
            // Nextflow publishDir param for all processes
            // https://www.nextflow.io/docs/latest/process.html#publishdir
            mode = "copy"

            // Where to publish results of Hich processes
            genome = "resources/.hich"
            chromsizes = "resources/.hich"
            bwa_mem2_index = "resources/.hich/bwa-mem2/index"
            bwa_mem_index = "resources/.hich/bwa-mem/index"
            digest = "resources/.hich"

            bam = "results/bam"
            parse = "results/pairs/parse"
            dedup = "results/pairs/dedup"
            mcool = "results/matrix/mcool"
            hic = "results/matrix/hic"
            pair_stats = "results/pair_stats"
            qc = "results/qc"
        }
        
        // After these steps, generate read-level pairs 
        // stats files and generate a combined MultiQC report
        // for all samples at each processing stage
        qc_after = ["Parse",
                    "IngestPairs",
                    "OptionalFragtag",
                    "TechrepsToBioreps",
                    "Deduplicate",
                    "BiorepsToConditions",
                    "Select"]

        // Number of reads to downsample to
        // when doing a humid run
        humid {
            n_reads = 100000
        }

    }

    comparisonSets {
        hicrep {
            p1 {
                resolutions = [100000, 1000000]
                chroms = []
                exclude = ["chrY", "chrM"]
                chrom_filter = "chrom if size > 5000000 else None"
                h = [1]
                dBPMax = [-1]
                bDownSample = [false]
            }
            p2 {
                resolutions = [100000, 1000000]
                chroms = []
                exclude = ["chr1", "chr2", "chr3", "chr4", "chr5", "chr6", "chr7", "chr8", "chr9", "chr10", "chrY", "chrM"]
                chrom_filter = "chrom if size > 5000000 else None"
                h = [1]
                dBPMax = [-1]
                bDownSample = [false]
            }
        }

        mustacheLoops {
            mustacheLoops1 {
                mustacheParams = [
                "--resolution 1000000",
                "--chromosome chr22",
                "--pThreshold .1",
                "--sparsityThreshold .88"
                ]
            }
        }
    }

    defaults {
        techrep = 1
        biorep = 1
        min_mapq = 30
        
        deduplicate = true

        datatype = "fastq"
        aligner = "bwa-mem2"
        aligner_threads = 10
        bwa_flags = "-SP5M"

        pairs_format {
            chrom1 = 2
            pos1 = 3
            chrom2 = 4
            pos2 = 5
        }

        parse_params = [
           "--flip",
           "--min-mapq 30",
           "--drop-readid",
           "--drop-seq",
           "--drop-sam"
        ]

        dedup_params = []

        select_params = []
            
        select_condition {
            keep_pair_types = ["UU", "RU", "UR"]
            keep_trans = true
            keep_cis = true
            min_dist_fr = 1000
            min_dist_rf = 1000
            min_dist_ff = 0
            min_dist_rr = 0

            chroms = ["chr1", "chr2", "chr3", "chr4", "chr5", "chr6",
                        "chr7", "chr8", "chr9", "chr10", "chr11", "chr12",
                        "chr13", "chr14", "chr15", "chr16", "chr17", "chr18",
                        "chr19", "chr20", "chr21", "chr22", "chrX"]
            
            discard_same_frag = true
        }

        make_hic = []

        make_cool = []

        make_mcool = [
            "--balance",
            "--balance-args '--max-iters 2000 --trans-only'",
            "--nproc 10"
        ]

        matrix {
            make_mcool_file_format = true
            make_hic_file_format = true
            resolutions = [100000, 1000000]
        }

        hicrepComparisonSets = ["p1", "p2"]
        mustacheLoopsComparisonSets = ["mustacheLoops1"]

        compartments {
            resolution = 100000
            hich_compartments_params = [
                "--n_eigs 3"
            ]
        }

        insulation {
            resolution = 100000
            cooltools_insulation_params = [
                "--bigwig"
            ]
        }        
    }
}
